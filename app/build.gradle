plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}
//apply plugin: 'org.jetbrains.kotlin.android.extensions'

android {
    namespace 'com.example.fitpeo_test'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.fitpeo_test"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    // In order to have parcelize annotation
//    androidExtensions {
//        experimental = true
//    }

//    dataBinding {
//        enabled = true
//    }
    buildFeatures {
        //viewBinding true
        dataBinding true
        viewBinding true
    }
//    kapt {
//        generateStubs = true
//    }
    // Allow references to generated code
    kapt {
        correctErrorTypes true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation("androidx.constraintlayout:constraintlayout:2.2.0-alpha10")

    // for adding recyclerview
    implementation 'androidx.recyclerview:recyclerview:1.3.0'

    // for adding cardview
    implementation 'androidx.cardview:cardview:1.0.0'

    //for retrofit ....
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.google.code.gson:gson:2.10'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'

    //coroutines..
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.2")
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.2'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1"

    //data binding...
    implementation 'androidx.databinding:databinding-runtime:8.0.2'

    implementation 'androidx.navigation:navigation-fragment-ktx:2.6.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.6.0'

    //test case...
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    testImplementation 'org.mockito:mockito-inline:2.13.0'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.2"
    testImplementation 'org.robolectric:robolectric:4.5.1'
    testImplementation 'org.mockito:mockito-core:2.19.0'
    testImplementation 'androidx.arch.core:core-testing:2.2.0'

    //dragger hilt...
    implementation("com.google.dagger:hilt-android:2.44")
    kapt("com.google.dagger:hilt-android-compiler:2.44")

    //image library
    implementation 'com.github.bumptech.glide:glide:4.12.0'
//    kapt("org.jetbrains.kotlinx:kotlinx-metadata-jvm:0.3.0")

    // For Robolectric tests.
    testImplementation("com.google.dagger:hilt-android-testing:2.28-alpha")
    // ...with Kotlin.
    kaptTest("com.google.dagger:hilt-android-compiler:2.28-alpha")
    // ...with Java.
    testAnnotationProcessor("com.google.dagger:hilt-android-compiler:2.28-alpha")
}